// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model Inventory {
  id        Int      @id @default(autoincrement())
  name      String
  edition   String
  condition String
  quantity  Int
  type      String
}

model RunningGames {
  id          Int           @id @default(autoincrement())
  sessionName String
  format      String
  DM          String
  days        String
  maxPlayers  Int
  players     GamePlayers[]
  archived    Boolean       @default(false)
}

model GamePlayers {
  id        Int       @id @default(autoincrement())
  playerName String
  game      RunningGames @relation(fields: [game_id], references: [id])
  game_id   Int
}

model InventoryRequest {
  id           Int      @id @default(autoincrement())
  name         String
  discordName  String
  email        String
  itemName     String
  details      String
  createdAt    DateTime @default(now()) // Tracks when the request was made
  contacted    Boolean       @default(false)
  resolved    Boolean       @default(false)
}

model GameRequest {
  id           Int      @id @default(autoincrement())
  name         String
  format       String
  days         String[]
  experience   String
  email        String
  discord      String
  createdAt    DateTime @default(now()) // Tracks when the request was made
  contacted    Boolean       @default(false)
  resolved    Boolean       @default(false)
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   
}